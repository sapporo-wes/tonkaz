name: deploy

on:
  push:
    tags:
      - "*.*.*"

jobs:
  build_binary:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: "Setup deno"
        uses: denoland/setup-deno@v1
        with:
          deno-version: "1.40.2"
      - name: "Build binary"
        run: |
          deno compile --allow-read --allow-net --lock=lock.json --target x86_64-unknown-linux-gnu --output=./tonkaz_x86_64-unknown-linux-gnu src/main.ts
          deno compile --allow-read --allow-net --lock=lock.json --target x86_64-apple-darwin --output=./tonkaz_x86_64-apple-darwin src/main.ts
          deno compile --allow-read --allow-net --lock=lock.json --target aarch64-apple-darwin --output=./tonkaz_aarch64-apple-darwin src/main.ts
      - name: "Upload x86_64-unknown-linux-gnu binary"
        uses: actions/upload-artifact@v3
        with:
          name: tonkaz_x86_64-unknown-linux-gnu
          path: tonkaz_x86_64-unknown-linux-gnu
      - name: "Upload x86_64-apple-darwin binary"
        uses: actions/upload-artifact@v3
        with:
          name: tonkaz_x86_64-apple-darwin
          path: tonkaz_x86_64-apple-darwin
      - name: "Upload aarch64-apple-darwin binary"
        uses: actions/upload-artifact@v3
        with:
          name: tonkaz_aarch64-apple-darwin
          path: tonkaz_aarch64-apple-darwin

  create_release:
    needs: [build_binary]
    runs-on: ubuntu-latest
    steps:
      - name: "Download x86_64-unknown-linux-gnu binary"
        uses: actions/download-artifact@v3
        with:
          name: tonkaz_x86_64-unknown-linux-gnu
      - name: "Download x86_64-apple-darwin binary"
        uses: actions/download-artifact@v3
        with:
          name: tonkaz_x86_64-apple-darwin
      - name: "Download aarch64-apple-darwin binary"
        uses: actions/download-artifact@v3
        with:
          name: tonkaz_aarch64-apple-darwin
      - name: "Release"
        run: |
          gh release \
            --repo ${{ github.repository }} \
            create ${{ github.ref_name }} \
            --title ${{ github.ref_name }} \
            --generate-notes \
            tonkaz_x86_64-unknown-linux-gnu \
            tonkaz_x86_64-apple-darwin \
            tonkaz_aarch64-apple-darwin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy_ghcr:
    needs: [create_release]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v2
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v2
      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: "Build and push"
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/tonkaz:${{ github.ref_name }}
            ghcr.io/${{ github.repository_owner }}/tonkaz:latest
